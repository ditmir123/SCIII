# -*- coding: utf-8 -*-
"""clonal selection assignment 5 final code.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MPfOV-sHI-YprUG_aThOAUZsXqr6krx1
"""

import random
import math

def objective(x):
    return x * math.sin(10 * math.pi * x) + 1

def initialize_population(size):
    return [random.uniform(0, 1) for _ in range(size)]

def clone_and_mutate(antibody, clones, mutation_rate):
    result = []
    for _ in range(clones):
        mutation = random.uniform(-mutation_rate, mutation_rate)
        new_antibody = antibody + mutation
        new_antibody = min(max(new_antibody, 0), 1)  # keep in [0,1]
        result.append(new_antibody)
    return result

def csa():
    population_size = 20
    generations = 100
    clones_per_best = 5
    mutation_rate = 0.1
    population = initialize_population(population_size)

    for gen in range(generations):
        fitness = [objective(x) for x in population]
        best = population[fitness.index(max(fitness))]
        clones = clone_and_mutate(best, clones_per_best, mutation_rate)
        clone_fitness = [objective(x) for x in clones]
        combined = population + clones
        combined_fitness = [objective(x) for x in combined]
        sorted_combined = [x for _, x in sorted(zip(combined_fitness, combined), reverse=True)]
        population = sorted_combined[:population_size]
        best_fitness = max([objective(x) for x in population])
        print(f"Generation {gen+1}: Best fitness = {best_fitness:.5f}")

    final_fitness = [objective(x) for x in population]
    best_solution = population[final_fitness.index(max(final_fitness))]
    print("\nBest solution x =", best_solution)
    print("Maximum function value =", objective(best_solution))

csa()

