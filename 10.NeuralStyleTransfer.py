# -*- coding: utf-8 -*-
"""6th.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16LETLEdSDYWqgGAeVLXizG1AhwAJPw2Q
"""

import tensorflow as tf
import tensorflow_hub as hub
import matplotlib.pyplot as plt

def load_image(image_path):
    img = tf.io.read_file(image_path)
    img = tf.image.decode_image(img, channels=3)
    img = tf.image.convert_image_dtype(img, tf.float32)
    img = img[tf.newaxis, :]
    return img

def show_image(image, title='Image'):
    image = tf.squeeze(image, axis=0)
    plt.imshow(image)
    plt.axis('off')
    plt.title(title)

content_image = load_image('content_image.jpg')
style_image = load_image('style_image.jpg')

plt.figure(figsize=(10, 5))
plt.subplot(1, 2, 1)
show_image(content_image, title='Content Image')
plt.subplot(1, 2, 2)
show_image(style_image, title='Style Image')
plt.show()

hub_model = hub.load('https://tfhub.dev/google/magenta/arbitrary-image-stylization-v1-256/2')

stylized_image = hub_model(tf.constant(content_image), tf.constant(style_image))[0]
show_image(stylized_image, title="Stylized")
plt.show()

import tensorflow as tf
import tensorflow_hub as hub
import matplotlib.pyplot as plt

def load_image(image):
    img = tf.io.read_file(image)
    img = tf.image.decode_image(img, channels=3)
    img = tf.image.convert_image_dtype(img,tf.float32)
    img = img[tf.newaxis,:]
    return img

def images(image):
    if len(image.shape)>3:
        image = tf.squeeze(image, [0])
    plt.imshow(image)
    plt.title("Stylized Image")

content=load_image("content_image.jpg")
style=load_image("style_image.jpg")

model=hub.load('https://tfhub.dev/google/magenta/arbitrary-image-stylization-v1-256/2')

output = model(tf.constant(content),tf.constant(style))[0]

images(output)
plt.show

import tensorflow as tf
import tensorflow_hub as hub
import matplotlib.pyplot as plt

def load_image(image_path):
    img= tf.io.read_file(image_path)
    img=tf.image.decode_image(img, channels=3)
    img= tf.image.convert_image_dtype(img, tf.float32)
    img=img[tf.newaxis, :]
    return img

def show_image(image, title="Title"):
    image= tf.squeeze(image, axis=0)
    plt.imshow(image)
    plt.axis("off")
    plt.title(title)

c=load_image('content_image.jpg')
s=load_image('style_image.jpg')

plt.figure(figsize=(10,15))
plt.subplot(1,2,1)
show_image(c, title="content")
plt.show()
plt.subplot(1,2,2)
show_image(s, title="style")
plt.show()

model= hub.load("https://tfhub.dev/google/magenta/arbitrary-image-stylization-v1-256/2")
st=model(tf.constant(c),tf.constant(s))[0]
show_image(st, title="stylized")
plt.show()

